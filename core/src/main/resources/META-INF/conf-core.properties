########################### DataSource properties ###########################

# the JDBC driver to use
#{"type":"String","label":"Data Source Driver"}
dataSource.driver = com.mysql.jdbc.Driver

# database user name
#{"type":"String","label":"Data Source User name"}
dataSource.user = root

# database password
#{"type":"String","label":"Data Source Password"}
dataSource.password = password

# JDBC database URL
#{"type":"String","label":"Data Source URL"}
dataSource.url = jdbc:mysql://127.0.0.1:3306/algotrader

########################### Esper statement properties ###########################

# enables simulation of option prices by the underlying and volatility
#{"type":"Boolean","label":"Simulate Options?"}
statement.simulateOptions = false

# enables retrieval of option prices from the database
#{"type":"Boolean","label":"Load Options from Database?"}
statement.loadOptionsFromDB = false

# enables simulation of future prices by the underlying
#{"type":"Boolean","label":"Simulation Futures by Underlying?"}
statement.simulateFuturesByUnderlying = false

# enables retrieval of future prices from their corresponding generic future
#{"type":"Boolean","label":"Simulate Futures by Generic Futures?"}
statement.simulateFuturesByGenericFutures = false

# enables margins calculation for current positions
#{"type":"Boolean","label":"Set Margin?"}
statement.setMargins = false

# enables expiration of expirable positions
#{"type":"Boolean","label":"Expire Positions?"}
statement.expirePosition = false

# enables automatic closing of positions once their price reaches the exitValue
#{"type":"Boolean","label":"Close Positions on Stop?"}
statement.closePosition = true

# enables redistribution of the NetLiqValue amongst strategies according to the defined allocation
#{"type":"Boolean","label":"Automatically rebalance Portfolio?"}
statement.rebalancePortfolio = false

# enables automatic forex hedge
#{"type":"Boolean","label":"Automatically Hedge Forex?"}
statement.hedgeForex = false

# notify in case there is no reply on an order
#{"type":"Boolean","label":"Notify on missing order reply?"}
statement.notifyMissingOrderReply = true

# enables emission of generic open and close ticks
#{"type":"Boolean","label":"Emit generic open and close ticks?"}
statement.emitGeneticTicks = false

########################### Data persistence parameters ###########################

# whether or not position record / cash balance check should be skipped when persisting transactions
# in case the check is disabled presence of position / cash balance records required for active
# strategies is assumed
#{"type":"Boolean","label":"Position / cash balance record check should be skipped when persisting transactions"}
persistence.positionCheckDisabled = false

########################### Misc properties ###########################

# save retrieved XML files to the file system
#{"type":"Boolean","label":"Save to File?"}
misc.saveToFile = true

# number of transactions to be displayed in the client
#{"type":"Integer","label":"Number of Transactions to display"}
misc.transactionDisplayCount = 20

# number of days to look forward or backward for the existence of ticks in the database
#{"type":"Integer","label":"Interval Days"}
misc.intervalDays = 4

# minimum amount for portfolioRebalancing
#{"type":"Double","label":"Rebalance Minimum Amount"}
misc.rebalanceMinAmount = 1000.0

# number of seconds to wait on an order acknowledgement
#{"type":"Integer","label":"Number of Seconds to wait for an Ack"}
misc.orderAckSeconds = 1

# default feed type to use for market data (InteractiveBrokers)
#{"type":"String","label":"Default Feed Type"}
misc.defaultFeedType = IB

########################### Forex Hedge properties ###########################

# equalize Forex by means of FX futures
#{"type":"Boolean","label":"Hedge FX with Futures?"}
fx.futureHedgeEnabled = false

# the minimum time-to-expiration for forex futures before they will be rolled
#{"type":"Integer","label":"FX Hedge Minimum Time to Expiration (in Millis) of Futures"}
fx.futureHedgeMinTimeToExpiration = 604800000

# minimum amount for Forex Hedge
#{"type":"Integer","label":"FX Hedge Minimum Amount"}
fx.hedgeMinAmount = 8000

# rounding amount for transactions (e.g. 6348 will be rounded to 6300)
#{"type":"Integer","label":"FX Hedge Batch Size"}
fx.hedgeBatchSize = 100

########################### Delta Hedge properties ###########################

# the minimum time-to-expiration for futures before they will be rolled
#{"type":"Integer","label":"Delta Hedge minimum Time to Expiration (in Millis)"}
delta.hedgeMinTimeToExpiration = 604800000

########################### HTTP properties ###########################

# number of worker threads
#{"type":"Integer","label":"Number of HTTP Workers"}
http.workers = 5

# retry in case of error
#{"type":"Boolean","label":"HTTP retry?"}
http.retry = true

# user agent string to use
#{"type":"String","label":"HTTP User Agent"}
http.userAgent = Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)

# use an HTTP Proxy
#{"type":"Boolean","label":"HTTP Use Proxy?"}
http.useProxy = false

########################## MAIL properties ############################

# the URI to connect to (protocol://user:password@host:port/folder
#{"type":"String","label":"IMAP Mail URI"}
mail.imap.uri=imaps://user:password@imap.gmail.com:993/inbox

# the socket factory (javax.net.SocketFactory or javax.net.ssl.SSLSocketFactory)
#{"type":"String","label":"IMAP Mail Socket Factory"}
mail.imap.socketFactory.class=javax.net.SocketFactory

# the protocol (IMAP or IMAPS)
#{"type":"String","label":"IMAP Mail Protocol"}
mail.store.protocol=imap
