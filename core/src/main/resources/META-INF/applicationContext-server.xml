<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-file="http://www.springframework.org/schema/integration/file"
    xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-3.0.xsd
        http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
        
    <context:component-scan base-package="ch.algotrader.wiring.server"/>

    <!-- =================================== Interactive Brokers  ========================================= -->

    <beans profile="iBNative,iBMarketData,iBReferenceData,iBHistoricalData">

        <bean id="iBSessionAdapter" class="ch.algotrader.adapter.ib.DefaultIBAdapter"/>

        <bean id="iBOrderMessageFactory" class="ch.algotrader.adapter.ib.DefaultIBOrderMessageFactory">
            <constructor-arg index="0" ref="iBConfig"/>
        </bean>

        <bean id="iBSessionLifecycle" class="ch.algotrader.adapter.ib.DefaultIBSessionLifecycle">
            <lookup-method name="getIBSession" bean="iBSession"/>
        </bean>

        <bean id="iBIdGenerator" class="ch.algotrader.adapter.ib.DefaultIBIdGenerator"/>

        <!--  optional properties like marketDataService and queues are autowired -->
        <bean id="iBMessageHandler" class="ch.algotrader.adapter.ib.DefaultIBMessageHandler" autowire="byName">
            <property name="clientId" value="0"/>
            <property name="sessionLifecycle" ref="iBSessionLifecycle"/>
        </bean>

        <bean id="iBSession" class="ch.algotrader.adapter.ib.IBSession">
            <constructor-arg index="0" value="${ib.defaultSessionId}"/>
            <constructor-arg index="1" value="${ib.host}"/>
            <constructor-arg index="2" value="${ib.port}"/>
            <constructor-arg ref="iBSessionLifecycle"/>
            <constructor-arg ref="iBMessageHandler"/>
            <constructor-arg ref="marketDataService"/>
        </bean>
    </beans>

    <beans profile="iBHistoricalData">
        <bean id="historicalDataQueue" class="java.util.concurrent.LinkedBlockingDeque"/>
    </beans>

    <beans profile="iBNative">
        <bean id="accountUpdateQueue" class="java.util.concurrent.LinkedBlockingDeque"/>
        <bean id="accountsQueue" class="java.util.concurrent.LinkedBlockingDeque"/>
        <bean id="profilesQueue" class="java.util.concurrent.LinkedBlockingDeque"/>
    </beans>

    <beans profile="iBReferenceData">
        <bean id="contractDetailsQueue" class="java.util.concurrent.LinkedBlockingDeque"/>
    </beans>

    <!-- =========================================== RECONCILIATION ================================================ -->

    <beans profile="reconciliation">

        <task:scheduler id="taskScheduler" pool-size="2"/>

        <util:properties id="javaMailProperties">
            <prop key="mail.imap.socketFactory.class">${mail.imap.socketFactory.class}</prop>
            <prop key="mail.imap.socketFactory.fallback">false</prop>
            <prop key="mail.store.protocol">${mail.store.protocol}</prop>
            <prop key="mail.imap.timeout">180000</prop>
<!--             <prop key="mail.debug">true</prop> -->
        </util:properties>

        <int-mail:imap-idle-channel-adapter
            store-uri="${mail.imap.uri}"
            channel="inputChannel"
            auto-startup="true"
            should-delete-messages="true"
            java-mail-properties="javaMailProperties"/>

        <int:channel id="inputChannel"/>

        <int:chain input-channel="inputChannel" output-channel="outputChannel">
            <int:transformer>
                <bean class="ch.algotrader.util.mail.EmailDispatcher" p:dispositions-ref="dispositions"/>
            </int:transformer>
            <int:filter expression="headers.containsKey('directory')"/>
            <int:transformer>
                <bean class="ch.algotrader.util.mail.EmailTransformer"/>
            </int:transformer>
            <int:splitter>
                <bean class="ch.algotrader.util.mail.EmailSplitter"/>
            </int:splitter>
        </int:chain>

        <int:channel id="outputChannel"/>

        <int-file:outbound-gateway
            request-channel="outputChannel"
            reply-channel="serviceChannel"
            auto-create-directory="true"
            directory="files/"
            filename-generator="fileNameGenerator"/>

        <bean id="fileNameGenerator"
            class="org.springframework.integration.file.DefaultFileNameGenerator"
            p:expression="headers.directory + '/' + headers.file_name"/>

        <int:channel id="serviceChannel"/>

        <int:service-activator
            input-channel="serviceChannel"
            expression="headers.reconciliationService.reconcile(payload)"/>

    </beans>

</beans>
