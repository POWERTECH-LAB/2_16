<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-file="http://www.springframework.org/schema/integration/file"
    xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.1.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
        http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <!-- ============================= Data Source an Transaction Management ============================ -->

    <!-- Local DataSource that works in any environment -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass"><value>${dataSource.driver}</value></property>
        <property name="user"><value>${dataSource.user}</value></property>
        <property name="password"><value>${dataSource.password}</value></property>
        <property name="jdbcUrl"><value>${dataSource.url}</value></property>
<!--         <property name="minPoolSize"><value>5</value></property> -->
<!--         <property name="maxPoolSize"><value>10</value></property> -->
          <property name="idleConnectionTestPeriod"><value>300</value></property>
          <property name="maxIdleTime"><value>1800</value></property>
    </bean>

    <!-- (local) Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- =========================================== JMX ================================================ -->

    <!--  MBean Server -->
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>

    <!--  Hibernate JMX Beans -->
    <bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService">
        <property name="statisticsEnabled" value="true" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

      <!--  EhCache JMX Beans -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml" />
        <property name="shared" value="true" />
    </bean>

    <bean id="ehCacheMBeanRegistration" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="net.sf.ehcache.management.ManagementService.registerMBeans" />
        <property name="arguments">
            <list>
                <ref bean="cacheManager" />
                <ref bean="mbeanServer" />
                <value>true</value>
                <value>true</value>
                <value>false</value>
                <value>true</value>
            </list>
        </property>
    </bean>

    <!-- Log4J JMX Beans -->
    <bean id="log4JExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="log4j:hiearchy=default">
                    <bean class="org.apache.log4j.jmx.HierarchyDynamicMBean"/>
                </entry>
            </map>
        </property>
        <property name="server" ref="mbeanServer"/>
    </bean>

    <!-- =================================== JMS  ========================================= -->

    <beans profile="server">

        <!-- JMS ActiveMQ Connection Factory -->
        <bean id="jmsActiveMQFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
            <property name="targetConnectionFactory">
                <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                    <property name="brokerURL" value="failover:tcp://localhost:61616" />
                </bean>
            </property>
        </bean>

        <bean id="javax.jms.Session.DUPS_OK_ACKNOWLEDGE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>

        <!-- ActiveMQ topic used for marketData -->
        <bean id="marketDataTopic" class="org.apache.activemq.command.ActiveMQTopic">
            <constructor-arg value="MARKETDATA.TOPIC" />
        </bean>

        <!-- Spring JMS Template used for marketData -->
        <bean id="marketDataTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="defaultDestination" ref="marketDataTopic" />
            <property name="timeToLive" value="10000"/>
              <property name="deliveryPersistent" value="false"/>
              <property name="messageIdEnabled" value="false"/>
              <property name="explicitQosEnabled" value="true" />
            <property name="sessionAcknowledgeMode" ref="javax.jms.Session.DUPS_OK_ACKNOWLEDGE"/>
        </bean>

        <!-- ActiveMQ topic used for generic events -->
        <bean id="genericTopic" class="org.apache.activemq.command.ActiveMQTopic">
            <constructor-arg value="GENERIC.TOPIC" />
        </bean>

        <!-- Spring JMS Template used for marketData -->
        <bean id="genericTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="defaultDestination" ref="genericTopic" />
            <property name="timeToLive" value="10000"/>
              <property name="deliveryPersistent" value="false"/>
              <property name="messageIdEnabled" value="false"/>
              <property name="explicitQosEnabled" value="true" />
            <property name="sessionAcknowledgeMode" ref="javax.jms.Session.DUPS_OK_ACKNOWLEDGE"/>
        </bean>

        <!-- Spring JMS Template used for strategy specific messages -->
        <bean id="strategyTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="messageConverter" ref="messageConverter" />
        </bean>

        <bean id="messageConverter" class="com.algoTrader.util.io.CollectionIgnoringMessageConverter"/>

    </beans>

    <!-- =================================== Broker Interfaces  ========================================= -->

    <beans profile="trading,securityRetrieval">
        <bean id="iBClientFactory" class="com.algoTrader.service.ib.IBClientFactory"/>
    </beans>

    <beans profile="jPMFix,iBFix,dCFix">
        <bean id="fixClient" class="com.algoTrader.service.fix.FixClient"/>
    </beans>

    <!-- =========================================== MAIL ================================================ -->

    <beans profile="ucitsReconciliation,bviReconciliation">

        <task:scheduler id="taskScheduler" pool-size="1"/>

        <int:channel id="inputChannel"/>

        <int:chain input-channel="inputChannel" output-channel="outputChannel">
            <int:transformer>
                <bean class="com.algoTrader.util.mail.EmailDispatcher" p:dispositions-ref="dispositions"/>
            </int:transformer>
            <int:filter expression="headers.containsKey('directory')"/>
            <int:transformer>
                <bean class="com.algoTrader.util.mail.EmailTransformer"/>
            </int:transformer>
            <int:splitter>
                <bean class="com.algoTrader.util.mail.EmailSplitter"/>
            </int:splitter>
        </int:chain>

        <int:publish-subscribe-channel id="outputChannel"/>

        <int-file:outbound-channel-adapter
            auto-create-directory="true"
            channel="outputChannel"
            directory="files/"
            filename-generator="fileNameGenerator"/>

        <bean id="fileNameGenerator"
            class="org.springframework.integration.file.DefaultFileNameGenerator"
            p:expression="headers.directory + '/' + headers.file_name"/>

        <int:service-activator
            input-channel="outputChannel"
            expression="headers.reconciliationService.reconcile(headers.file_name, payload)"/>
    </beans>

    <beans profile="ucitsReconciliation">

        <int-mail:imap-idle-channel-adapter
            store-uri="imap://vola:Zermatt11@mail.linardcapital.com/INBOX"
            channel="inputChannel"
            auto-startup="true"
            should-delete-messages="true"/>

        <bean id="dispositions" class="org.springframework.beans.factory.config.SetFactoryBean">
            <property name="sourceSet">
                <set>
                    <bean class="com.algoTrader.util.mail.Disposition" p:name="ib" p:from="donotreply@interactivebrokers.com" p:subject="Activity Flex" p:directory="ib" p:reconciliationService-ref="iBReconciliationService"/>
                    <bean class="com.algoTrader.util.mail.Disposition" p:name="ui" p:from="listenversand-lux@universal-investment.com" p:subject="Bewertungsdaten" p:directory="ui" p:reconciliationService-ref="uIReconciliationService"/>
                    <bean class="com.algoTrader.util.mail.Disposition" p:name="rbs" p:from="customer.services@rbs.com" p:subject="Linard Files" p:directory="rbs" p:reconciliationService-ref="rBSReconciliationService"/>
                    <bean class="com.algoTrader.util.mail.Disposition" p:name="jpm" p:from="FO.eXtraTrade.Operate.NA@jpmorgan.com" p:subject="linard_eod" p:directory="jpm" p:reconciliationService-ref="jPMReconciliationService"/>
                </set>
            </property>
        </bean>
    </beans>

    <beans profile="bviReconciliation">

        <int-mail:imap-idle-channel-adapter
            store-uri="imap://quant:Zermatt11@mail.linardcapital.com/INBOX"
            channel="inputChannel"
            auto-startup="true"
            should-delete-messages="true"/>

        <bean id="dispositions" class="org.springframework.beans.factory.config.SetFactoryBean">
            <property name="sourceSet">
                <set>
                    <bean class="com.algoTrader.util.mail.Disposition" p:name="ib" p:from="donotreply@interactivebrokers.com" p:subject="Activity Flex" p:directory="ib" p:reconciliationService-ref="iBReconciliationService"/>
                </set>
            </property>
        </bean>
    </beans>

</beans>
