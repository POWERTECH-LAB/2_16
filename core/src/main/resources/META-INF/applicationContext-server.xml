<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd" >

    <!-- ============================= Data Source an Transaction Management ============================ -->

    <!-- Local DataSource that works in any environment -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass"><value>${dataSource.driver}</value></property>
        <property name="user"><value>${dataSource.user}</value></property>
        <property name="password"><value>${dataSource.password}</value></property>
        <property name="jdbcUrl"><value>${dataSource.url}</value></property>
<!--         <property name="minPoolSize"><value>5</value></property> -->
<!--         <property name="maxPoolSize"><value>10</value></property> -->
          <property name="idleConnectionTestPeriod"><value>300</value></property>
          <property name="maxIdleTime"><value>1800</value></property>
    </bean>

    <!-- (local) Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- =========================================== JMX ================================================ -->

    <!--  MBean Server -->
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>

    <!--  Hibernate JMX Beans -->
    <bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService">
        <property name="statisticsEnabled" value="true" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

      <!--  EhCache JMX Beans -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml" />
        <property name="shared" value="true" />
    </bean>

    <bean id="ehCacheMBeanRegistration" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="net.sf.ehcache.management.ManagementService.registerMBeans" />
        <property name="arguments">
            <list>
                <ref bean="cacheManager" />
                <ref bean="mbeanServer" />
                <value>true</value>
                <value>true</value>
                <value>false</value>
                <value>true</value>
            </list>
        </property>
    </bean>

    <!-- Log4J JMX Beans -->
    <bean id="log4JExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="log4j:hiearchy=default">
                    <bean class="org.apache.log4j.jmx.HierarchyDynamicMBean"/>
                </entry>
            </map>
        </property>
        <property name="server" ref="mbeanServer"/>
    </bean>

    <!-- =================================== JMS  ========================================= -->

    <beans profile="server">

        <!-- JMS ActiveMQ Connection Factory -->
        <bean id="jmsActiveMQFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
            <property name="targetConnectionFactory">
                <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                    <property name="brokerURL" value="failover:tcp://localhost:61616" />
                </bean>
            </property>
        </bean>

        <bean id="javax.jms.Session.DUPS_OK_ACKNOWLEDGE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>

        <!-- ActiveMQ topic used for marketData -->
        <bean id="marketDataTopic" class="org.apache.activemq.command.ActiveMQTopic">
            <constructor-arg value="MARKETDATA.TOPIC" />
        </bean>

        <!-- Spring JMS Template used for marketData -->
        <bean id="marketDataTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="defaultDestination" ref="marketDataTopic" />
            <property name="timeToLive" value="10000"/>
              <property name="deliveryPersistent" value="false"/>
              <property name="messageIdEnabled" value="false"/>
              <property name="explicitQosEnabled" value="true" />
            <property name="sessionAcknowledgeMode" ref="javax.jms.Session.DUPS_OK_ACKNOWLEDGE"/>
        </bean>

        <!-- ActiveMQ topic used for generic events -->
        <bean id="genericTopic" class="org.apache.activemq.command.ActiveMQTopic">
            <constructor-arg value="GENERIC.TOPIC" />
        </bean>

        <!-- Spring JMS Template used for marketData -->
        <bean id="genericTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="defaultDestination" ref="genericTopic" />
            <property name="timeToLive" value="10000"/>
              <property name="deliveryPersistent" value="false"/>
              <property name="messageIdEnabled" value="false"/>
              <property name="explicitQosEnabled" value="true" />
            <property name="sessionAcknowledgeMode" ref="javax.jms.Session.DUPS_OK_ACKNOWLEDGE"/>
        </bean>

        <!-- Spring JMS Template used for strategy specific messages -->
        <bean id="strategyTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsActiveMQFactory" />
            <property name="messageConverter" ref="messageConverter" />
        </bean>

        <bean id="messageConverter" class="com.algoTrader.util.io.CollectionIgnoringMessageConverter"/>

    </beans>

    <!-- =================================== Broker Interfaces  ========================================= -->

    <beans profile="trading,securityRetrieval">
        <bean id="iBClientFactory" class="com.algoTrader.service.ib.IBClientFactory"/>
    </beans>

    <beans profile="jPMFix,iBFix">
        <bean id="fixClient" class="com.algoTrader.service.fix.FixClient"/>
    </beans>

    <!-- =========================================== MAIL ================================================ -->

    <beans profile="ucitsReconciliation">
        <bean id="mailMessageReceiver" class="org.springframework.ws.transport.mail.MailMessageReceiver">
            <property name="storeUri" value="imap://aws:Zermatt11@mail.linardcapital.com/INBOX"/>
            <property name="disposition">
                <set>
                    <bean class="org.springframework.ws.transport.mail.Disposition" p:name="ib" p:from="donotreply@interactivebrokers.com" p:subject="Activity Flex" p:service-ref="iBReconciliationService"/>
                    <bean class="org.springframework.ws.transport.mail.Disposition" p:name="ui" p:from="listenversand-lux@universal-investment.com" p:subject="Bewertungsdaten" p:service-ref="uIReconciliationService"/>
                    <bean class="org.springframework.ws.transport.mail.Disposition" p:name="rbs" p:from="customer.services@rbs.com" p:subject="Linard Files" p:service-ref="rBSReconciliationService"/>
                </set>
            </property>
            <property name="monitoringStrategy">
                <bean class="org.springframework.ws.transport.mail.monitor.ImapIdleMonitoringStrategy"/>
            </property>
            <property name="javaMailProperties">
                <props>
                    <prop key="mail.imap.timeout">180000</prop>
                </props>
            </property>
            <property name="reconnectTimeout" value="60000"/>
        </bean>
    </beans>

    <beans profile="bviReconciliation">
        <bean id="mailMessageReceiver" class="org.springframework.ws.transport.mail.MailMessageReceiver">
            <property name="storeUri" value="imap://quant:Zermatt11@mail.linardcapital.com/INBOX"/>
            <property name="disposition">
                <set>
                    <bean class="org.springframework.ws.transport.mail.Disposition" p:name="ib" p:from="donotreply@interactivebrokers.com" p:subject="Activity Flex" p:service-ref="iBReconciliationService"/>
                </set>
            </property>
            <property name="monitoringStrategy">
                <bean class="org.springframework.ws.transport.mail.monitor.ImapIdleMonitoringStrategy"/>
            </property>
            <property name="javaMailProperties">
                <props>
                    <prop key="mail.imap.timeout">180000</prop>
                </props>
            </property>
            <property name="reconnectTimeout" value="60000"/>
        </bean>
    </beans>

</beans>
