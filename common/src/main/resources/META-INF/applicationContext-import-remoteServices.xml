<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by remoting/client//applicationContext-client.xml.vsl in andromda-spring-cartridge -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <bean id="futureService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/FutureService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.FutureService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.FutureService</value></property>
    </bean>

    <bean id="lazyLoaderService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/LazyLoaderService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.LazyLoaderService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.LazyLoaderService</value></property>
    </bean>

    <bean id="positionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/PositionService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.PositionService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.PositionService</value></property>
    </bean>

    <bean id="optionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/OptionService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.OptionService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.OptionService</value></property>
    </bean>

    <bean id="marketDataService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/MarketDataService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.MarketDataService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.MarketDataService</value></property>
    </bean>

    <bean id="orderService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/OrderService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.OrderService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.OrderService</value></property>
    </bean>

    <bean id="combinationService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/CombinationService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.CombinationService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.CombinationService</value></property>
    </bean>

    <bean id="measurementService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/MeasurementService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.MeasurementService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.MeasurementService</value></property>
    </bean>

    <bean id="propertyService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/PropertyService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.PropertyService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.PropertyService</value></property>
    </bean>

    <bean id="portfolioService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/PortfolioService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.PortfolioService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.PortfolioService</value></property>
    </bean>

    <bean id="calendarService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/CalendarService</value></property>
                <property name="serviceInterface"><value>ch.algotrader.service.CalendarService</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.service.CalendarService</value></property>
    </bean>

    <bean id="genericDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                <property name="refreshStubOnConnectFailure"><value>true</value></property>
                <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/GenericDao</value></property>
                <property name="serviceInterface"><value>ch.algotrader.dao.GenericDao</value></property>
            </bean>
        </property>
        <property name="proxyInterfaces"><value>ch.algotrader.dao.GenericDao</value></property>
    </bean>
    
    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->


    <!-- ========================= Start of PROFILE SERVICE DEFINITIONS ========================= -->

    <beans profile="historicalData">
        <bean id="historicalDataService" class="org.springframework.aop.framework.ProxyFactoryBean">
            <property name="target">
                <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                    <property name="refreshStubOnConnectFailure"><value>true</value></property>
                    <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/HistoricalDataService</value></property>
                    <property name="serviceInterface"><value>ch.algotrader.service.HistoricalDataService</value></property>
                </bean>
            </property>
            <property name="proxyInterfaces"><value>ch.algotrader.service.HistoricalDataService</value></property>
        </bean>
    </beans>

    <beans profile="referenceData">
        <bean id="referenceDataService" class="org.springframework.aop.framework.ProxyFactoryBean">
            <property name="target">
                <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
                    <property name="refreshStubOnConnectFailure"><value>true</value></property>
                    <property name="serviceUrl"><value>${remoteRmiScheme}://${remoteServer}:${remotePort}/ReferenceDataService</value></property>
                    <property name="serviceInterface"><value>ch.algotrader.service.ReferenceDataService</value></property>
                </bean>
            </property>
            <property name="proxyInterfaces"><value>ch.algotrader.service.ReferenceDataService</value></property>
        </bean>
    </beans>

    <!-- ========================= End of PROFILE SERVICE DEFINITIONS ========================= -->
</beans>
