<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate3/hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="ch.algotrader.entity.property.PropertyImpl"
        table="`property`" dynamic-insert="false" dynamic-update="false">
	    <meta attribute="implements">ch.algotrader.entity.property.PropertyI</meta>      
	    <meta attribute="generated-class">ch.algotrader.entity.property.Property</meta>
	    <meta attribute="class-code">
<![CDATA[
    /**
     * Returns the first non-null value property
     * @return java.lang.Object
     */
    public abstract java.lang.Object getValue();

    /**
     * sets the correct value property. If the value is not one of  {@code int}, {@code double},
     * {@code money}, {@code text}, {@code date} or {@code boolean} a {@link
     * IllegalArgumentException} is thrown
     * @param value 
     */
    public abstract void setValue(java.lang.Object value);

]]>   
	    </meta> 	    
        <meta attribute="class-description"><![CDATA[Custom Property of type {@code int}, {@code double}, {@code money}, {@code text}, {@code date} or {@code boolean} that can be assigned to a {@link PropertyHolder}]]></meta>
        <cache usage="read-write" />
        <id name="id" type="long" >
            <column name="ID" sql-type="BIGINT"/>

            <generator class="native">
                <!-- id-generator merge-point -->
            </generator>
        </id>
        <version name="version" type="int" column="VERSION"/>
        <property name="name">
            <meta attribute="use-in-equals">true</meta>
            <column name="NAME" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="persistent">
            <meta attribute="field-description"><![CDATA[If set to {@code false}, the Property will be removed when resetting the database before a simulation run.]]></meta>
            <column name="PERSISTENT" not-null="true" unique="false" sql-type="TINYINT"/>

            <type name="boolean"/>
        </property>
        <property name="intValue">
            <column name="INT_VALUE" not-null="false" unique="false" sql-type="INTEGER"/>

            <type name="java.lang.Integer"/>
        </property>
        <property name="doubleValue">
            <column name="DOUBLE_VALUE" not-null="false" unique="false" sql-type="DOUBLE"/>

            <type name="java.lang.Double"/>
        </property>
        <property name="moneyValue">
            <column name="MONEY_VALUE" not-null="false" unique="false" sql-type="Decimal(15,6)"/>

            <type name="java.math.BigDecimal"/>
        </property>
        <property name="textValue">
            <column name="TEXT_VALUE" not-null="false" unique="false" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="dateTimeValue">
            <column name="DATE_TIME_VALUE" not-null="false" unique="false" sql-type="TIMESTAMP"/>

            <type name="java.util.Date"/>
        </property>
        <property name="booleanValue">
            <column name="BOOLEAN_VALUE" not-null="false" unique="false" sql-type="TINYINT"/>

            <type name="java.lang.Boolean"/>
        </property>
        <many-to-one name="propertyHolder" class="ch.algotrader.entity.property.PropertyHolderImpl" cascade="none" foreign-key="PROPERTY_PROPERTY_HOLDER_FKC" not-null="true" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.property.PropertyHolder</meta>
            <meta attribute="field-description"><![CDATA[Base class of an Entity that can hold {@link ch.algotrader.entity.property.Property Properties}.]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="PROPERTY_HOLDER_FK" not-null="true" sql-type="BIGINT"/>

        </many-to-one>
    </class>
</hibernate-mapping>
