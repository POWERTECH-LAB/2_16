<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="ch.algotrader.entity.trade.AllocationImpl"
        table="`allocation`" dynamic-insert="false" dynamic-update="false">
	    <meta attribute="implements">ch.algotrader.entity.trade.AllocationI</meta>      
	    <meta attribute="generated-class">ch.algotrader.entity.trade.Allocation</meta>
	    <meta attribute="class-code">
<![CDATA[
]]>   
	    </meta> 	    
        <meta attribute="class-description"><![CDATA[Represents an allocation to an individual {@link ch.algotrader.entity.Account Account}.
If an OrderPreference is defined for an {@link ch.algotrader.enumeration.OrderType OrderType} that sends orders to multiple Accounts (e.g. {@link ch.algotrader.entity.trade.DistributingOrder DistributingOrder}), allocations to different Accounts can be defined.
p
iNote: the total of all Allocations needs to be 1.0/i]]></meta>
        <cache usage="read-write" />
        <id name="id" type="long" >
            <column name="ID" sql-type="BIGINT"/>

            <generator class="native">
                <!-- id-generator merge-point -->
            </generator>
        </id>
        <property name="value">
            <meta attribute="field-description"><![CDATA[The amount that is allocated to the corresponding Account.
<p>
<i>Note: the total of all Allocations needs to be 1.0</i>]]></meta>
            <column name="VALUE" not-null="true" unique="false" sql-type="DOUBLE"/>

            <type name="double"/>
        </property>
        <many-to-one name="orderPreference" class="ch.algotrader.entity.trade.OrderPreferenceImpl" foreign-key="ALLOCATION_ORDER_PREFERENCE_FC" not-null="true" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.trade.OrderPreference</meta>
            <meta attribute="field-description"><![CDATA[Contains certain order default values (e.g. quantity, orderType, delays, etc.). Except for the
{@link ch.algotrader.enumeration.OrderType OrderType}, all values have to be defined through
Properties.]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="ORDER_PREFERENCE_FK" not-null="true" sql-type="BIGINT"/>

        </many-to-one>
        <many-to-one name="account" class="ch.algotrader.entity.AccountImpl" foreign-key="ALLOCATION_ACCOUNT_FKC" not-null="true" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.Account</meta>
            <meta attribute="field-description"><![CDATA[Represents an actual Account / AccountGroup / AllocationProfile with an external Broker / Bank]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="ACCOUNT_FK" not-null="true" sql-type="BIGINT"/>

        </many-to-one>
    </class>
</hibernate-mapping>
