<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="ch.algotrader.entity.security.SecurityImpl"
        table="`security`" dynamic-insert="false" dynamic-update="false" abstract="true">
	    <meta attribute="implements">ch.algotrader.entity.security.SecurityI</meta>      
	    <meta attribute="generated-class">ch.algotrader.entity.security.Security</meta>
	    <meta attribute="class-code">
<![CDATA[
    /**
     * Gets the leverage of this Security. This method has to be overwritten by subclasses (it
     * returns zero by default).
     * @param marketDataEvent 
     * @param underlyingMarketDataEvent 
     * @param currentTime 
     * @return double
     */
    public abstract double getLeverage(ch.algotrader.entity.marketData.MarketDataEventI marketDataEvent, ch.algotrader.entity.marketData.MarketDataEventI underlyingMarketDataEvent, java.util.Date currentTime);

]]>   
	    </meta> 	    
        <meta attribute="class-description"><![CDATA[The base class of all Securities in the system]]></meta>
        <cache usage="read-write" />
        <id name="id" type="long" >
            <column name="ID" sql-type="BIGINT"/>

            <generator class="native">
                <!-- id-generator merge-point -->
            </generator>
        </id>
        <discriminator column="class" type="string"/>
        <property name="symbol">
            <meta attribute="use-in-equals">true</meta>
            <column name="SYMBOL" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="description">
            <column name="DESCRIPTION" not-null="false" unique="false" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="isin">
            <meta attribute="field-description"><![CDATA[International Securities Identification Number]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="ISIN" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="bbgid">
            <meta attribute="use-in-equals">true</meta>
            <column name="BBGID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="ric">
            <meta attribute="field-description"><![CDATA[Reuters Instrument Code]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="RIC" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="conid">
            <meta attribute="field-description"><![CDATA[Interactive Brokers conid]]></meta>
            <meta attribute="use-in-equals">true</meta>
            <column name="CONID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="lmaxid">
            <meta attribute="use-in-equals">true</meta>
            <column name="LMAXID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <property name="ttid">
            <meta attribute="use-in-equals">true</meta>
            <column name="TTID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>

            <type name="java.lang.String"/>
        </property>
        <many-to-one name="underlying" class="ch.algotrader.entity.security.SecurityImpl" foreign-key="SECURITY_UNDERLYING_FKC" not-null="false" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.security.Security</meta>
            <meta attribute="field-description"><![CDATA[The base class of all Securities in the system]]></meta>
            <column name="UNDERLYING_FK" not-null="false" sql-type="BIGINT"/>

        </many-to-one>
        <set name="subscriptions" order-by="SECURITY_FK" lazy="true" fetch="select" inverse="true">
            <meta attribute="field-description"><![CDATA[The base class of all Securities in the system]]></meta>
            <cache usage="read-write" />
            <key foreign-key="SUBSCRIPTION_SECURITY_FKC">
                <column name="SECURITY_FK" sql-type="BIGINT"/>

            </key>
            <one-to-many class="ch.algotrader.entity.SubscriptionImpl" not-found="exception"/>
        </set>
        <set name="positions" order-by="SECURITY_FK" lazy="true" fetch="select" inverse="true">
            <meta attribute="field-description"><![CDATA[The base class of all Securities in the system]]></meta>
            <cache usage="read-write" />
            <key foreign-key="POSITION_SECURITY_FKC">
                <column name="SECURITY_FK" sql-type="BIGINT"/>

            </key>
            <one-to-many class="ch.algotrader.entity.PositionImpl" not-found="exception"/>
        </set>
        <many-to-one name="securityFamily" class="ch.algotrader.entity.security.SecurityFamilyImpl" foreign-key="SECURITY_SECURITY_FAMILY_FKC" not-null="true" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.security.SecurityFamily</meta>
            <meta attribute="field-description"><![CDATA[Represents an entire family of similar {@link ch.algotrader.entity.security.Security Securities}
(e.g. All Options of the SP500)]]></meta>
            <column name="SECURITY_FAMILY_FK" not-null="true" sql-type="BIGINT"/>

        </many-to-one>
        <set name="securityReferences" order-by="OWNER_FK" lazy="true" fetch="select" inverse="true" cascade="delete">
            <meta attribute="field-description"><![CDATA[The base class of all Securities in the system]]></meta>
            <meta attribute="field-inverse-name">owner</meta>
            <cache usage="read-write" />
            <key foreign-key="SECURITY_REFERENCE_OWNER_FKC">
                <column name="OWNER_FK" sql-type="BIGINT"/>

            </key>
            <one-to-many class="ch.algotrader.entity.security.SecurityReferenceImpl" not-found="exception"/>
        </set>
        <subclass name="ch.algotrader.entity.security.GenericFutureImpl" discriminator-value="GenericFutureImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.GenericFutureI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.GenericFuture</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * calculates the expiration Date based on the duration and the specified date
     * @param dateTime 
     * @return java.util.Date
     */
    public abstract java.util.Date getExpiration(java.util.Date dateTime);

]]>   
            </meta> 	    
            <property name="duration">
                <meta attribute="field-description"><![CDATA[The Duration of this GenericFuture. A Duration of @code{MONTH_1} means that this GenericFuture is equal to the physical Front Month Future. After the Expiration Date of the physical Future, the GenericFuture with Duration 1 (that until now represented the expiring Future) now switches to represent the Future that is next to expire.]]></meta>
                <meta attribute="property-type">ch.algotrader.enumeration.Duration</meta>
                <column name="DURATION" not-null="true" unique="false" sql-type="BIGINT"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Duration</param>
                </type>
            </property>
            <property name="assetClass">
                <meta attribute="property-type">ch.algotrader.enumeration.AssetClass</meta>
                <column name="ASSET_CLASS" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.AssetClass</param>
                </type>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.ForexImpl" discriminator-value="ForexImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.ForexI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Forex</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * 
     * @return ch.algotrader.enumeration.Currency
     */
    public abstract ch.algotrader.enumeration.Currency getTransactionCurrency();

]]>   
            </meta> 	    
            <property name="baseCurrency">
                <meta attribute="field-description"><![CDATA[The Base Currency of this Forex Contract (e.g. EUR for the EUR.USD Forex)]]></meta>
                <meta attribute="property-type">ch.algotrader.enumeration.Currency</meta>
                <column name="BASE_CURRENCY" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Currency</param>
                </type>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.OptionImpl" discriminator-value="OptionImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.OptionI,ch.algotrader.entity.security.ExpirableI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Option</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Gets the time-to-expiration in milliseconds from the specified {@code dateTime}
     * @param dateTime 
     * @return long
     */
    public abstract long getTimeToExpiration(java.util.Date dateTime);

    /**
     * Gets the Duration of this ExpirableI from the specified {@code dateTime}. A Duration of 1
     * means that this is the next Object in the Chain to expire.
     * @param dateTime 
     * @return int
     */
    public abstract int getDuration(java.util.Date dateTime);

]]>   
            </meta> 	    
            <property name="expiration">
                <meta attribute="field-description"><![CDATA[The Expiration Date]]></meta>
                <column name="EXPIRATION" not-null="true" unique="false" sql-type="DATE"/>

                <type name="java.util.Date"/>
            </property>
            <property name="strike">
                <meta attribute="field-description"><![CDATA[The strike price.]]></meta>
                <column name="STRIKE" not-null="true" unique="false" sql-type="Decimal(15,6)"/>

                <type name="java.math.BigDecimal"/>
            </property>
            <property name="type">
                <meta attribute="field-description"><![CDATA[The {@link OptionType} (i.e. Put or Call)]]></meta>
                <meta attribute="property-type">ch.algotrader.enumeration.OptionType</meta>
                <column name="OPTION_TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.OptionType</param>
                </type>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.FutureImpl" discriminator-value="FutureImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.FutureI,ch.algotrader.entity.security.ExpirableI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Future</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Gets the time-to-expiration in milliseconds from the specified {@code dateTime}
     * @param dateTime 
     * @return long
     */
    public abstract long getTimeToExpiration(java.util.Date dateTime);

    /**
     * Gets the Duration of this ExpirableI from the specified {@code dateTime}. A Duration of 1
     * means that this is the next Object in the Chain to expire.
     * @param dateTime 
     * @return int
     */
    public abstract int getDuration(java.util.Date dateTime);

]]>   
            </meta> 	    
            <property name="expiration">
                <meta attribute="field-description"><![CDATA[The Last Trading / Expiration Date]]></meta>
                <column name="EXPIRATION" not-null="true" unique="false" sql-type="DATE"/>

                <type name="java.util.Date"/>
            </property>
            <property name="monthYear">
                <meta attribute="field-description"><![CDATA[The month and year in the format "yyyymm".
Note: month can be different that the month part of the expiration. E.g. a Jan 2016 contract might have an expiration date of Dec. 16th 2015.]]></meta>
                <column name="MONTH_YEAR" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="java.lang.String"/>
            </property>
            <property name="firstNotice">
                <meta attribute="field-description"><![CDATA[The first notice date]]></meta>
                <column name="FIRST_NOTICE" not-null="false" unique="false" sql-type="DATE"/>

                <type name="java.util.Date"/>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.IntrestRateImpl" discriminator-value="IntrestRateImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.IntrestRateI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.IntrestRate</meta>
            <meta attribute="class-code">
            </meta>
            <property name="duration">
                <meta attribute="property-type">ch.algotrader.enumeration.Duration</meta>
                <column name="DURATION" not-null="true" unique="false" sql-type="BIGINT"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Duration</param>
                </type>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.IndexImpl" discriminator-value="IndexImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.IndexI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Index</meta>
            <meta attribute="class-code">
            </meta>
            <property name="assetClass">
                <meta attribute="property-type">ch.algotrader.enumeration.AssetClass</meta>
                <column name="ASSET_CLASS" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.AssetClass</param>
                </type>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.StockImpl" discriminator-value="StockImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.StockI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Stock</meta>
            <meta attribute="class-code">
            </meta>
            <property name="gics">
                <column name="GICS" not-null="false" unique="false" sql-type="VARCHAR(255)"/>

                <type name="java.lang.String"/>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.CombinationImpl" discriminator-value="CombinationImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.CombinationI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Combination</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Returns a {@link ch.algotrader.util.collection.LongMap LongMap} containing Component
     * Securities and their quantities.
     * @return ch.algotrader.util.collection.LongMap<Security>
     */
    public abstract ch.algotrader.util.collection.LongMap<Security> getQuantityMap();

    /**
     * Finds a Component of the specified Security
     * @param security 
     * @return ch.algotrader.entity.security.Component
     */
    public abstract ch.algotrader.entity.security.Component getComponentBySecurity(ch.algotrader.entity.security.Security security);

    /**
     * Get the quantity of the Component of the specified Security
     * @param security 
     * @return long
     */
    public abstract long getComponentQuantity(ch.algotrader.entity.security.Security security);

    /**
     * Get the {@link ch.algotrader.enumeration.Direction Direction} of the Component of the
     * specified Security
     * @param security 
     * @return ch.algotrader.enumeration.Direction
     */
    public abstract ch.algotrader.enumeration.Direction getComponentDirection(ch.algotrader.entity.security.Security security);

    /**
     * Gets the number of Components
     * @return int
     */
    public abstract int getComponentCount();

    /**
     * Gets the sum of the quantities of all Components
     * @return long
     */
    public abstract long getComponentTotalQuantity();

]]>   
            </meta> 	    
            <property name="uuid">
                <meta attribute="field-description"><![CDATA[auto generated unique identifier. Combinations do not have any other natural identifiers.]]></meta>
                <meta attribute="use-in-equals">true</meta>
                <column name="UUID" not-null="true" unique="true" sql-type="VARCHAR(255)"/>

                <type name="java.lang.String"/>
            </property>
            <property name="type">
                <meta attribute="field-description"><![CDATA[The type of the Combination (e.g. Butterfly, Condor, RatioSpread, etc.)]]></meta>
                <meta attribute="property-type">ch.algotrader.enumeration.CombinationType</meta>
                <column name="COMBINATION_TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.CombinationType</param>
                </type>
            </property>
            <property name="persistent">
                <meta attribute="field-description"><![CDATA[If set to {@code false}, the Combination will be removed when resetting the database before a simulation run.]]></meta>
                <column name="PERSISTENT" not-null="true" unique="false" sql-type="TINYINT"/>

                <type name="boolean"/>
            </property>
            <set name="components" order-by="COMBINATION_FK" lazy="true" fetch="select" inverse="true" cascade="delete">
                <meta attribute="field-description"><![CDATA[A synthetic security composed of one or many {@link Component Components}.]]></meta>
                <cache usage="read-write" />
                <key foreign-key="COMPONENT_COMBINATION_FKC">
                    <column name="COMBINATION_FK" sql-type="BIGINT"/>

                </key>
                <one-to-many class="ch.algotrader.entity.security.ComponentImpl" not-found="exception"/>
            </set>
        </subclass>
        <subclass name="ch.algotrader.entity.security.BondImpl" discriminator-value="BondImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.BondI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Bond</meta>
            <meta attribute="class-code">
            </meta>
            <property name="maturity">
                <meta attribute="field-description"><![CDATA[The Maturity Date]]></meta>
                <column name="MATURITY" not-null="true" unique="false" sql-type="DATE"/>

                <type name="java.util.Date"/>
            </property>
            <property name="coupon">
                <meta attribute="field-description"><![CDATA[The coupon of the Bond specified as a double]]></meta>
                <column name="COUPON" not-null="true" unique="true" sql-type="DOUBLE"/>

                <type name="double"/>
            </property>
        </subclass>
        <subclass name="ch.algotrader.entity.security.FundImpl" discriminator-value="FundImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.FundI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Fund</meta>
            <meta attribute="class-code">
            </meta>
        </subclass>
        <subclass name="ch.algotrader.entity.security.CommodityImpl" discriminator-value="CommodityImpl" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.CommodityI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Commodity</meta>
            <meta attribute="class-code">
            </meta>
            <property name="type">
                <meta attribute="property-type">ch.algotrader.enumeration.CommodityType</meta>
                <column name="COMMODITY_TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)"/>

                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.CommodityType</param>
                </type>
            </property>
        </subclass>
    </class>
</hibernate-mapping>
