<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate3/hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="ch.algotrader.entity.security.SecurityImpl"
        table="`security`" dynamic-insert="false" dynamic-update="false" abstract="true">
	    <meta attribute="implements">ch.algotrader.entity.security.SecurityI</meta>      
	    <meta attribute="generated-class">ch.algotrader.entity.security.Security</meta>
	    <meta attribute="class-code">
<![CDATA[	    
    /**
     * Gets the leverage of this Security. This method has to be overwritten by subclasses (it
     * returns zero by default).
     * @param marketDataEvent 
     * @param underlyingMarketDataEvent 
     * @return double
     */
    public abstract double getLeverage(ch.algotrader.entity.marketData.MarketDataEvent marketDataEvent, ch.algotrader.entity.marketData.MarketDataEvent underlyingMarketDataEvent);

    /**
     * Gets the margin (per contract) of this Security. This method has to be overwritten by
     * marginable subclasses.
     * @param currentValue 
     * @param underlyingCurrentValue 
     * @return double
     */
    public abstract double getMargin(double currentValue, double underlyingCurrentValue);

]]>   
	    </meta> 	    
        <meta attribute="class-description">The base class of all Securities in the system</meta>
        <cache usage="read-write" />
        <comment>The base class of all Securities in the system</comment>
        <id name="id" type="long" >
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
                <!-- id-generator merge-point -->
            </generator>
        </id>
        <property name="symbol">
            <column name="SYMBOL" not-null="false" unique="true" sql-type="VARCHAR(255)"/>
            <type name="java.lang.String"/>
        </property>
        <property name="isin">
            <meta attribute="field-description">International Securities Identification Number</meta>
            <column name="ISIN" not-null="false" unique="true" sql-type="VARCHAR(255)">
                <comment>International Securities Identification Number</comment>
            </column>
            <type name="java.lang.String"/>
        </property>
        <property name="bbgid">
            <column name="BBGID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>
            <type name="java.lang.String"/>
        </property>
        <property name="ric">
            <meta attribute="field-description">Reuters Instrument Code</meta>
            <column name="RIC" not-null="false" unique="true" sql-type="VARCHAR(255)">
                <comment>Reuters Instrument Code</comment>
            </column>
            <type name="java.lang.String"/>
        </property>
        <property name="conid">
            <meta attribute="field-description">Interactive Brokers conid</meta>
            <column name="CONID" not-null="false" unique="true" sql-type="VARCHAR(255)">
                <comment>Interactive Brokers conid</comment>
            </column>
            <type name="java.lang.String"/>
        </property>
        <property name="lmaxid">
            <column name="LMAXID" not-null="false" unique="true" sql-type="VARCHAR(255)"/>
            <type name="java.lang.String"/>
        </property>
        <many-to-one name="underlying" class="ch.algotrader.entity.security.SecurityImpl" foreign-key="SECURITY_UNDERLYING_FKC" not-null="false" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.security.Security</meta>
            <meta attribute="field-description">The base class of all Securities in the system</meta>
            <column name="UNDERLYING_FK" not-null="false" sql-type="BIGINT">
                <comment>The base class of all Securities in the system</comment>
            </column>
        </many-to-one>
        <set name="subscriptions" order-by="SECURITY_FK" lazy="true" fetch="select" inverse="true">
            <meta attribute="field-description">The base class of all Securities in the system</meta>
            <cache usage="read-write" />
            <key foreign-key="SUBSCRIPTION_SECURITY_FKC">
                <column name="SECURITY_FK" sql-type="BIGINT">
                    <comment>The base class of all Securities in the system</comment>
                </column>
            </key>
            <one-to-many class="ch.algotrader.entity.SubscriptionImpl" not-found="exception"/>
        </set>
        <set name="positions" order-by="SECURITY_FK" lazy="true" fetch="select" inverse="true">
            <meta attribute="field-description">The base class of all Securities in the system</meta>
            <cache usage="read-write" />
            <key foreign-key="POSITION_SECURITY_FKC">
                <column name="SECURITY_FK" sql-type="BIGINT">
                    <comment>The base class of all Securities in the system</comment>
                </column>
            </key>
            <one-to-many class="ch.algotrader.entity.PositionImpl" not-found="exception"/>
        </set>
        <many-to-one name="securityFamily" class="ch.algotrader.entity.security.SecurityFamilyImpl" foreign-key="SECURITY_SECURITY_FAMILY_FKC" not-null="true" lazy="proxy" fetch="select">
            <meta attribute="property-type">ch.algotrader.entity.security.SecurityFamily</meta>
            <meta attribute="field-description">Represents an entire family of similar {@link ch.algotrader.entity.security.Security Securities}
(e.g. All Options of the SP500)</meta>
            <column name="SECURITY_FAMILY_FK" not-null="true" sql-type="BIGINT">
                <comment>Represents an entire family of similar {@link ch.algotrader.entity.security.Security Securities}
(e.g. All Options of the SP500)</comment>
            </column>
        </many-to-one>
        <joined-subclass name="ch.algotrader.entity.security.GenericFutureImpl" table="`generic_future`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.GenericFutureI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.GenericFuture</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * calculates the expiration Date based on the duration and the specified date
     * @param dateTime 
     * @return java.util.Date
     */
    public abstract java.util.Date getExpiration(java.util.Date dateTime);

]]>   
            </meta>  
            <key foreign-key="GENERIC_FUTUREIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="duration">
                <meta attribute="field-description">The Duration of this GenericFuture. A Duration of @code{MONTH_1} means that this GenericFuture is equal to the physical Front Month Future. After the Expiration Date of the physical Future, the GenericFuture with Duration 1 (that until now represented the expiring Future) now switches to represent the Future that is next to expire.</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.Duration</meta>
                <column name="DURATION" not-null="true" unique="false" sql-type="BIGINT">
                    <comment>The Duration of this GenericFuture. A Duration of @code{MONTH_1} means that this GenericFuture is equal to the physical Front Month Future. After the Expiration Date of the physical Future, the GenericFuture with Duration 1 (that until now represented the expiring Future) now switches to represent the Future that is next to expire.</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Duration</param>
                </type>
            </property>
            <property name="assetClass">
                <meta attribute="property-type">ch.algotrader.enumeration.AssetClass</meta>
                <column name="ASSET_CLASS" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.AssetClass</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.ForexImpl" table="`forex`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.ForexI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Forex</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * 
     * @return ch.algotrader.enumeration.Currency
     */
    public abstract ch.algotrader.enumeration.Currency getTransactionCurrency();

]]>   
            </meta>  
            <key foreign-key="FOREXIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="baseCurrency">
                <meta attribute="field-description">The Base Currency of this Forex Contract (e.g. EUR for the EUR.USD Forex)</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.Currency</meta>
                <column name="BASE_CURRENCY" not-null="true" unique="false" sql-type="VARCHAR(255)">
                    <comment>The Base Currency of this Forex Contract (e.g. EUR for the EUR.USD Forex)</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Currency</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.OptionImpl" table="`option`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.OptionI,ch.algotrader.entity.security.ExpirableI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Option</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Gets the time-to-expiration in milliseconds from the specified {@code dateTime}
     * @param dateTime 
     * @return long
     */
    public abstract long getTimeToExpiration(java.util.Date dateTime);

    /**
     * Gets the Duration of this ExpirableI from the specified {@code dateTime). A Duration of 1
     * means that this is the next Object in the Chain to expire.
     * @param dateTime 
     * @return int
     */
    public abstract int getDuration(java.util.Date dateTime);

]]>   
            </meta>  
            <key foreign-key="OPTIONIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="expiration">
                <meta attribute="field-description">The Expiration Date</meta>
                <column name="EXPIRATION" not-null="true" unique="false" sql-type="DATETIME">
                    <comment>The Expiration Date</comment>
                </column>
                <type name="java.util.Date"/>
            </property>
            <property name="strike">
                <meta attribute="field-description">The strike price.</meta>
                <column name="STRIKE" not-null="true" unique="false" sql-type="Decimal(15,6)">
                    <comment>The strike price.</comment>
                </column>
                <type name="java.math.BigDecimal"/>
            </property>
            <property name="type">
                <meta attribute="field-description">The {@link OptionType} (i.e. Put or Call)</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.OptionType</meta>
                <column name="TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)">
                    <comment>The {@link OptionType} (i.e. Put or Call)</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.OptionType</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.FutureImpl" table="`future`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.FutureI,ch.algotrader.entity.security.ExpirableI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Future</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Gets the time-to-expiration in milliseconds from the specified {@code dateTime}
     * @param dateTime 
     * @return long
     */
    public abstract long getTimeToExpiration(java.util.Date dateTime);

    /**
     * Gets the Duration of this ExpirableI from the specified {@code dateTime). A Duration of 1
     * means that this is the next Object in the Chain to expire.
     * @param dateTime 
     * @return int
     */
    public abstract int getDuration(java.util.Date dateTime);

]]>   
            </meta>  
            <key foreign-key="FUTUREIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="expiration">
                <meta attribute="field-description">The Expiration Date</meta>
                <column name="EXPIRATION" not-null="true" unique="false" sql-type="DATETIME">
                    <comment>The Expiration Date</comment>
                </column>
                <type name="java.util.Date"/>
            </property>
            <property name="firstNotice">
                <meta attribute="field-description">The first notice date</meta>
                <column name="FIRST_NOTICE" not-null="false" unique="false" sql-type="DATETIME">
                    <comment>The first notice date</comment>
                </column>
                <type name="java.util.Date"/>
            </property>
            <property name="lastTrading">
                <meta attribute="field-description">The last trading date</meta>
                <column name="LAST_TRADING" not-null="false" unique="false" sql-type="DATETIME">
                    <comment>The last trading date</comment>
                </column>
                <type name="java.util.Date"/>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.IntrestRateImpl" table="`intrest_rate`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.IntrestRateI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.IntrestRate</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="INTREST_RATEIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="duration">
                <meta attribute="property-type">ch.algotrader.enumeration.Duration</meta>
                <column name="DURATION" not-null="true" unique="false" sql-type="BIGINT"/>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Duration</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.IndexImpl" table="`index`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.IndexI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Index</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="INDEXIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="assetClass">
                <meta attribute="property-type">ch.algotrader.enumeration.AssetClass</meta>
                <column name="ASSET_CLASS" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.AssetClass</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.StockImpl" table="`stock`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.StockI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Stock</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="STOCKIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="gics">
                <column name="GICS" not-null="false" unique="false" sql-type="VARCHAR(255)"/>
                <type name="java.lang.String"/>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.ImpliedVolatilityImpl" table="`implied_volatility`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.ImpliedVolatilityI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.ImpliedVolatility</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="IMPLIED_VOLATILITYIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="duration">
                <meta attribute="field-description">Duration defined as one of the Standard {@link Duration Durations}.</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.Duration</meta>
                <column name="DURATION" not-null="true" unique="false" sql-type="BIGINT">
                    <comment>Duration defined as one of the Standard {@link Duration Durations}.</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.Duration</param>
                </type>
            </property>
            <property name="moneyness">
                <meta attribute="field-description">The Moneyness of this ImpliedVolatility.
p
Example:
ul
liCall: 1 - strike/spot/li
liPut: strike/spot - 1/li
/ul
iNote: The ATM Moneyness is 0/i</meta>
                <column name="MONEYNESS" not-null="false" unique="false" sql-type="DOUBLE">
                    <comment>The Moneyness of this ImpliedVolatility.
p
Example:
ul
liCall: 1 - strike/spot/li
liPut: strike/spot - 1/li
/ul
iNote: The ATM Moneyness is 0/i</comment>
                </column>
                <type name="java.lang.Double"/>
            </property>
            <property name="delta">
                <meta attribute="field-description">The Delta of this ImpliedVolatility.
p
Example:
ul
liCall: 0% (OTM) - 100% (ITM)/li
liPut: 0% (ITM) - 100% (OTM)/li
/ul
iNote: The ATM Delta is 50%/i</meta>
                <column name="DELTA" not-null="false" unique="false" sql-type="DOUBLE">
                    <comment>The Delta of this ImpliedVolatility.
p
Example:
ul
liCall: 0% (OTM) - 100% (ITM)/li
liPut: 0% (ITM) - 100% (OTM)/li
/ul
iNote: The ATM Delta is 50%/i</comment>
                </column>
                <type name="java.lang.Double"/>
            </property>
            <property name="type">
                <meta attribute="field-description">The {@link OptionType} (i.e. Put or Call)</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.OptionType</meta>
                <column name="TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)">
                    <comment>The {@link OptionType} (i.e. Put or Call)</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.OptionType</param>
                </type>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.CombinationImpl" table="`combination`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.CombinationI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Combination</meta>
            <meta attribute="class-code">
<![CDATA[
    /**
     * Returns a {@link LongMap} containing Component Securities and their quantities.
     * @return ch.algotrader.util.collection.LongMap<Security>
     */
    public abstract ch.algotrader.util.collection.LongMap<Security> getQuantityMap();

    /**
     * Finds a Component of the specified Security
     * @param security 
     * @return ch.algotrader.entity.security.Component
     */
    public abstract ch.algotrader.entity.security.Component getComponentBySecurity(ch.algotrader.entity.security.Security security);

    /**
     * Get the quantity of the Component of the specified Security
     * @param security 
     * @return long
     */
    public abstract long getComponentQuantity(ch.algotrader.entity.security.Security security);

    /**
     * Get the {@link Direction} of the Component of the specified Security
     * @param security 
     * @return ch.algotrader.enumeration.Direction
     */
    public abstract ch.algotrader.enumeration.Direction getComponentDirection(ch.algotrader.entity.security.Security security);

    /**
     * Gets the number of Components
     * @return int
     */
    public abstract int getComponentCount();

    /**
     * Gets the sum of the quantities of all Components
     * @return long
     */
    public abstract long getComponentTotalQuantity();

]]>   
            </meta>  
            <key foreign-key="COMBINATIONIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="uuid">
                <meta attribute="field-description">auto generated unique identifier. Combinations do not have any other natural identifiers.</meta>
                <column name="UUID" not-null="true" unique="true" sql-type="VARCHAR(255)">
                    <comment>auto generated unique identifier. Combinations do not have any other natural identifiers.</comment>
                </column>
                <type name="java.lang.String"/>
            </property>
            <property name="type">
                <meta attribute="field-description">The type of the Combination (e.g. Butterfly, Condor, RatioSpread, etc.)</meta>
                <meta attribute="property-type">ch.algotrader.enumeration.CombinationType</meta>
                <column name="TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)">
                    <comment>The type of the Combination (e.g. Butterfly, Condor, RatioSpread, etc.)</comment>
                </column>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.CombinationType</param>
                </type>
            </property>
            <property name="persistent">
                <meta attribute="field-description">If set to {@code false}, the Combination will be removed when resetting the database before a simulation run.</meta>
                <column name="PERSISTENT" not-null="true" unique="false" sql-type="TINYINT">
                    <comment>If set to {@code false}, the Combination will be removed when resetting the database before a simulation run.</comment>
                </column>
                <type name="boolean"/>
            </property>
            <set name="components" order-by="COMBINATION_FK" lazy="true" fetch="select" inverse="true" cascade="delete">
                <meta attribute="field-description">A synthetic security composed of one or many {@link Component Components}.</meta>
                <cache usage="read-write" />
                <key foreign-key="COMPONENT_COMBINATION_FKC">
                    <column name="COMBINATION_FK" sql-type="BIGINT">
                        <comment>A synthetic security composed of one or many {@link Component Components}.</comment>
                    </column>
                </key>
                <one-to-many class="ch.algotrader.entity.security.ComponentImpl" not-found="exception"/>
            </set>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.BondImpl" table="`bond`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.BondI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Bond</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="BONDIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="maturity">
                <meta attribute="field-description">The Maturity Date</meta>
                <column name="MATURITY" not-null="true" unique="false" sql-type="DATETIME">
                    <comment>The Maturity Date</comment>
                </column>
                <type name="java.util.Date"/>
            </property>
            <property name="coupon">
                <meta attribute="field-description">The coupon of the Bond specified as a double</meta>
                <column name="COUPON" not-null="true" unique="true" sql-type="DOUBLE">
                    <comment>The coupon of the Bond specified as a double</comment>
                </column>
                <type name="double"/>
            </property>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.FundImpl" table="`fund`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.FundI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Fund</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="FUNDIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
        </joined-subclass>
        <joined-subclass name="ch.algotrader.entity.security.CommodityImpl" table="`commodity`" dynamic-insert="false" dynamic-update="false" abstract="false">
            <meta attribute="implements">ch.algotrader.entity.security.CommodityI</meta>
            <meta attribute="generated-class">ch.algotrader.entity.security.Commodity</meta>
            <meta attribute="class-code">
<![CDATA[
]]>   
            </meta>  
            <key foreign-key="COMMODITYIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="type">
                <meta attribute="property-type">ch.algotrader.enumeration.CommodityType</meta>
                <column name="TYPE" not-null="true" unique="false" sql-type="VARCHAR(255)"/>
                <type name="ch.algotrader.hibernate.HibernateEnumType">
                 <param name="enumClassName">ch.algotrader.enumeration.CommodityType</param>
                </type>
            </property>
        </joined-subclass>
    </class>
</hibernate-mapping>
